---
- name: Install k3s
  hosts: all
  become: true
  vars_prompt:
    - name: k3s_token
      prompt: k3s token. MUST be saved for backup restoration.
      private: true
  tasks:
    - name: Remove firewall
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/iptables/rules.v4
        - /etc/iptables/rules.v6
      register: removed_firewall

    - name: Flush iptables
      ansible.builtin.shell: iptables -F && ip6tables -F
      failed_when: false
      when: removed_firewall.changed
      tags:
        - skip_ansible_lint

    - name: Ensure disk is partitioned
      community.general.parted:
        device: "{{ data_disk }}"
        number: 1
        state: present
        fs_type: xfs

    - name: Ensure disk is formatted
      community.general.filesystem:
        fstype: xfs
        dev: "{{ data_disk }}1"

    - name: Mount disk
      ansible.posix.mount:
        src: "{{ data_disk }}1"
        path: /mnt/data
        fstype: xfs
        opts: pquota
        state: mounted

    - name: Ensure directory exists
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - /mnt/data/etcd-snapshots

    - name: Download k3s
      ansible.builtin.get_url:
        url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version | urlencode }}/k3s{% if ansible_architecture == "aarch64" %}-arm64{% endif %}
        dest: /usr/local/bin/k3s
        mode: 0755

    - name: Set kubectl symlink
      ansible.builtin.file:
        dest: /usr/local/bin/kubectl
        src: /usr/local/bin/k3s
        state: link

    - name: Create systemd service
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/k3s-io/k3s/{{ k3s_version | urlencode }}/k3s.service
        dest: /etc/systemd/system/k3s.service
        mode: 0644

    - name: Create config dir
      ansible.builtin.file:
        path: /etc/rancher/k3s
        state: directory
        mode: 0755

    - name: Set config file
      ansible.builtin.copy:
        content: "{{ k3s_config_control_plane | to_nice_yaml }}"
        dest: /etc/rancher/k3s/config.yaml
        mode: 0644

    - name: Restore backup
      ansible.builtin.command:
        cmd: k3s server --cluster-init --cluster-reset --cluster-reset-restore-path /mnt/data/etcd-snapshots/{{ restore_backup }}
      when: restore_backup is defined

    - name: Start k3s
      ansible.builtin.systemd:
        name: k3s
        state: started
        enabled: true
        daemon_reload: true

    - name: Wait for kubeconfig
      ansible.builtin.wait_for:
        path: /etc/rancher/k3s/k3s.yaml

    - name: Fetch kubeconfig
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ../kubeconfig.yaml
        flat: true

    - name: Set endpoint to kubeconfig
      ansible.builtin.replace:
        path: ../kubeconfig.yaml
        regexp: 'https://(127\.0\.0\.1|\[::1\]):6443'
        replace: 'https://{{ ansible_host | ansible.utils.ipwrap }}:6443'
      delegate_to: localhost
      become: false
